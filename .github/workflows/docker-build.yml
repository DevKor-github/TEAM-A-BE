name: docker-build

on:
  push:
    branches: ['develop']

env:
  DOCKER_IMAGE: ghcr.io/devheun/new-kukey
  DOCKER_CONTAINER: new-kukey

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Docker
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: build and push image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: setup .env.prod
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.prod
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.prod
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.prod
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.prod
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.prod
          echo "JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }}" >> .env.prod
          echo "JWT_REFRESEH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> .env.prod
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env.prod
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env.prod
          echo "ADMIN_ID=${{ secrets.ADMIN_ID }}" >> .env.prod
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> .env.prod
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env.prod
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env.prod
          echo "AWS_BUCKET_REGION=${{ secrets.AWS_BUCKET_REGION }}" >> .env.prod
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env.prod
          echo "DEEPL_API_KEY=${{ secrets.DEEPL_API_KEY }}" >> .env.prod
          echo "PORT=${{ secrets.PORT }}" >> .env.prod
          echo "SWAGGER_USER=${{ secrets.SWAGGER_USER }}" >> .env.prod
          echo "SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }}" >> .env.prod

          cat .env.prod

      - name: Run Docker
        run: |
          sudo docker stop ${{ env.DOCKER_CONTAINER }} && sudo docker rm ${{ env.DOCKER_CONTAINER }} && sudo docker rmi ${{ env.DOCKER_IMAGE }}:latest
          sudo docker run --env-file ./.env.prod --platform linux/amd64 -d --name ${{ env.DOCKER_CONTAINER }} --network bridge -p ${{ secrets.PORT }}:${{ secrets.PORT }} --restart always ${{ env.DOCKER_IMAGE }}:latest
